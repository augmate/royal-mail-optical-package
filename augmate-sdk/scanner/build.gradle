buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.12.1'
        classpath 'org.robolectric:robolectric-gradle-plugin:0.12.0'
    }
}
apply plugin: 'com.android.library'
apply plugin: 'robolectric'

repositories {
    mavenCentral()
}

android {
    compileSdkVersion 'Google Inc.:Glass Development Kit Preview:19'
    buildToolsVersion '20.0.0'
    defaultConfig {
        applicationId 'com.augmate.sdk.scanner'
        minSdkVersion 19
        targetSdkVersion 19
        versionCode 1
        versionName '1.0'

        ndk {
            moduleName "native-scanner"
            stl "gnustl_shared"
            abiFilters "x86", "armeabi-v7a"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    sourceSets {
        main {
            jni.srcDirs = ['src/main/jni']
            jniLibs.srcDirs = ['libs']
        }

        androidTest {
            setRoot('src/test')
        }
    }

    buildTypes {
        buildTypes {
            debug {
                jniDebugBuild true
            }
        }
        release {
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    lintOptions {
        abortOnError false
    }
}

task javah {
    ant.javah(
        class: 'com.augmate.sdk.scanner.NativeUtils',
        outputFile: 'src/main/jni/NativeUtils.h',
        classpath: 'src/main/java'
    )
}

preBuild.dependsOn javah

robolectric {
    // configure the set of classes for JUnit tests
    include '**/*Test.class'
    exclude '**/espresso/**/*.class'
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':augmate-sdk:logger')

    androidTestCompile 'com.google.android:android:4.1.1.4'
    androidTestCompile 'org.robolectric:robolectric:2.3'
    androidTestCompile 'org.assertj:assertj-core:1.6.1'
    androidTestCompile 'junit:junit:4.11'
}

apply plugin: 'idea'

idea {
    module {
        testOutputDir = file('build/test-classes/debug')
    }
}
